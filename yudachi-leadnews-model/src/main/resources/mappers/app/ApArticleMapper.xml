<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yudachi.model.mappers.app.ApArticleMapper">
    <resultMap id="resultMap" type="com.yudachi.model.article.pojos.ApArticle">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="author_id" property="authorId"/>
        <result column="author_name" property="authorName"/>
        <result column="channel_id" property="channelId"/>
        <result column="channel_name" property="channelName"/>
        <result column="layout" property="layout"/>
        <result column="flag" property="flag"/>
        <result column="images" property="images"/>
        <result column="labels" property="labels"/>
        <result column="likes" property="likes"/>
        <result column="collection" property="collection"/>
        <result column="comment" property="comment"/>
        <result column="views" property="views"/>
        <result column="province_id" property="provinceId"/>
        <result column="city_id" property="cityId"/>
        <result column="county_id" property="countyId"/>
        <result column="created_time" property="createdTime"/>
        <result column="publish_time" property="publishTime"/>
        <result column="sync_status" property="syncStatus"/>
    </resultMap>
    <resultMap id="resultStatisticMap" type="com.yudachi.model.article.pojos.ApArticleSDto">
        <result column="author_id" property="authorId"/>
        <result column="count" property="count"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, title, author_id, author_name, channel_id, channel_name, layout, flag, images,
    labels, likes, collection, comment, views, province_id, city_id, county_id, created_time, 
    publish_time,sync_status
  </sql>

  <sql id="Base_Column_Where">
      <where>
          <if test="title!=null and title!=''">
             and title = #{title}
         </if>
         <if test="authorId!=null and authorId!=''">
             and author_id = #{authorId}
         </if>
          <if test="authorName!=null and authorName!=''">
              and author_name = #{authorName}
         </if>
         <if test="channelId!=null and channelId!=''">
             and channel_id = #{channelId}
         </if>
         <if test="channelName!=null and channelName!=''">
             and channel_name = #{channelName}
         </if>
         <if test="layout!=null and layout!=''">
             and layout = #{layout}
         </if>
          <if test="flag!=null and flag!=''">
            and flag = #{flag}
          </if>
          <if test="views!=null and views!=''">
            and views = #{views}
         </if>
          <if test="syncStatus!=null">
             and sync_status = #{syncStatus}
         </if>
     </where>
 </sql>

    <!-- 依据地理位置获取 -->
    <select id="loadArticleListByLocation" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from ap_article a
        <where>
            <if test="dto.provinceId != null">
                and a.province_id=#{dto.provinceId}
            </if>
            <if test="dto.cityId!=null">
                and a.city_id=#{dto.cityId}
            </if>
            <if test="dto.countyId!=null">
                and a.county_id=#{dto.countyId}
            </if>
            <!-- loadmore -->
            <if test="type != null and type == 1">
                and a.publish_time <![CDATA[<]]> #{dto.minBehotTime}
            </if>
            <if test="type != null and type == 2">
                and a.publish_time <![CDATA[>]]> #{dto.maxBehotTime}
            </if>
            <if test="dto.tag != '__all__'">
                and a.channel_id = #{dto.tag}
            </if>
        </where>
        limit #{dto.size}
    </select>

    <!-- 根据文章ID列表获取文章数据 -->
    <select id="loadArticleListByIdList" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from ap_article
        where id in(
        <trim prefix="" suffixOverrides=",">
            <foreach collection="list" item="item" separator=",">
                #{item.articleId}
            </foreach>
        </trim>
        )
    </select>

    <!-- 根据文章ID获取文章数据 -->
    <select id="selectById" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from ap_article
        where id = #{id}
    </select>

    <insert id="insert" parameterType="com.yudachi.model.article.pojos.ApArticle">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyColumn="id" keyProperty="id">
            select last_insert_id()
        </selectKey>
        insert into ap_article
        (title,
        author_id,
        author_name,
        channel_id,
        channel_name,
        layout,
        flag,
        images,
        labels,
        likes,
        collection,
        comment,
        views,
        province_id,
        city_id,
        county_id,
        created_time,
        publish_time,sync_status,origin)
        values
        (#{title},
        #{authorId},
        #{authorName},
        #{channelId},
        #{channelName},
        #{layout},
        #{flag},
        #{images},
        #{labels},
        #{likes},
        #{collection},
        #{comment},
        #{views},
        #{provinceId},
        #{cityId},
        #{countyId},
        #{createdTime},
        #{publishTime},
        #{syncStatus},
        #{origin}
        )
    </insert>

    <select id="loadLastArticleForHot" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from ap_article
        where publish_time &gt; #{lastDate}
    </select>

    <update id="updateArticleView">
    UPDATE
        ap_article
    SET
        views = GREATEST(IFNULL(views,0) + #{viewCount}, #{viewCount}),
        collection = GREATEST(IFNULL(collection,0) + #{collectCount}, #{collectCount}),
        comment = GREATEST(IFNULL(comment,0) + #{commontCount}, #{commontCount}),
        likes = GREATEST(IFNULL(likes,0) + #{likeCount}, #{likeCount})
    WHERE id=#{articleId}
    </update>

    <!-- 以及文章IDS列表获取文章数据V2 -->
    <select id="loadArticleListByIdListV2" resultMap="resultMap">
        select * from ap_article where id in(
        <trim prefix="" suffixOverrides=",">
            <foreach item="item" collection="list" separator=",">
                #{item}
            </foreach>
        </trim>
        )
    </select>

    <select id="selectList" resultMap="resultMap">
        select
        <include refid="Base_Column_List"/>
        from ap_article
        <include refid="Base_Column_Where"/>
    </select>
    <update id="updateSyncStatus">
        UPDATE ap_article SET sync_status = #{syncStatus} WHERE id=#{id}
    </update>

</mapper>